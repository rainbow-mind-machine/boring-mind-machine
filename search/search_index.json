{
    "docs": [
        {
            "location": "/",
            "text": "embarcadero-mind-machine\n\u00b6\n\n\nembarcadero mind machine\n is the extensible framework for building Github bot flocks.\n\n\nembarcadero classes\n\u00b6\n\n\nhere are all of the embarcadero classes:\n\n\n\n\nGithubKeymaker\n\n\nShepherd\n\n\nSheep\n\n\n\n\n(No Lumberjack method is needed.)\n\n\nThis follows the \nmind machine\n architecuture:\n\n\n\n\nKeymaker - takes care of authentication\n\n\nShepherd - constructs each sheep with keys\n\n\nSheep - uses keys to create API instance\n\n\n\n\nembarcadero mind machine\n is a work in progress.\n\n\ndeveloper workflow\n\u00b6\n\n\nsee boring mind machine for info about the infrastructure.",
            "title": "Home"
        },
        {
            "location": "/#embarcadero-mind-machine",
            "text": "embarcadero mind machine  is the extensible framework for building Github bot flocks.",
            "title": "embarcadero-mind-machine"
        },
        {
            "location": "/#embarcadero-classes",
            "text": "here are all of the embarcadero classes:   GithubKeymaker  Shepherd  Sheep   (No Lumberjack method is needed.)  This follows the  mind machine  architecuture:   Keymaker - takes care of authentication  Shepherd - constructs each sheep with keys  Sheep - uses keys to create API instance   embarcadero mind machine  is a work in progress.",
            "title": "embarcadero classes"
        },
        {
            "location": "/#developer-workflow",
            "text": "see boring mind machine for info about the infrastructure.",
            "title": "developer workflow"
        },
        {
            "location": "/keymaker/",
            "text": "Github Keymaker\n\u00b6\n\n\nembarcadero mind machine defines a Keymaker object for authenticating\nwith the Github API via OAuth.",
            "title": "Github Keymaker"
        },
        {
            "location": "/keymaker/#github-keymaker",
            "text": "embarcadero mind machine defines a Keymaker object for authenticating\nwith the Github API via OAuth.",
            "title": "Github Keymaker"
        },
        {
            "location": "/shepherd/",
            "text": "Shepherd\n\u00b6\n\n\nThe embarcadero mind machine shepherd is not much different from \nyour typical shepherd, it's basically there to initialize the \nflock by creating one sheep per key.\n\n\nAs described in boring mind machine, any mind machine that\nwants to use the boring shepherd base class should define \ntwo methods, each taking a key:\n\n\n\n\nvalidate the key\n\n\ncreate a Sheep from the key",
            "title": "Shepherd"
        },
        {
            "location": "/shepherd/#shepherd",
            "text": "The embarcadero mind machine shepherd is not much different from \nyour typical shepherd, it's basically there to initialize the \nflock by creating one sheep per key.  As described in boring mind machine, any mind machine that\nwants to use the boring shepherd base class should define \ntwo methods, each taking a key:   validate the key  create a Sheep from the key",
            "title": "Shepherd"
        },
        {
            "location": "/sheep/",
            "text": "Sheep\n\u00b6\n\n\nembarcadero mind machine Sheep have basic functionality described by the Github API.\n\n\nIdeas:\n\n\n\n\n\n\nping pong pair - simple ping pong on an issue (no, it's your problem. :reassign:)\n\n\n\n\n\n\nfavestar bots\n\n\n\n\nto_fave = []; faved = [];",
            "title": "Sheep"
        },
        {
            "location": "/sheep/#sheep",
            "text": "embarcadero mind machine Sheep have basic functionality described by the Github API.  Ideas:    ping pong pair - simple ping pong on an issue (no, it's your problem. :reassign:)    favestar bots   to_fave = []; faved = [];",
            "title": "Sheep"
        }
    ]
}